openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: string
        - name: fancy_query_arg
          in: query
          description: some fancy quering
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An paged array of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPet
      tags:
        - pets
      parameters:
        - name: body
          in: body
          description: Pet object that needs to be added to the store
          required: true
          schema:
            $ref: "#/components/schemas/Pet"
      responses:
        '201':
          description: Null response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '400':
          description: Invalid data
          content:
            applictaion/json:
              schema:
                $ref: "#/components/schemas/Error"
        '422':
          description: Data error
          content:
            applictaion/json:
              schema:
                $ref: "#/components/schemas/Error"

  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        '404':
          description: Pet not found
          content:
            applictaion/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        nested:
          type: object
          properties:
            omg:
              type: object
              properties:
                very_omg_type:
                  type: integer
            name:
              type: string
            second_name:
              type: integer
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
